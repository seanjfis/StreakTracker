{"ast":null,"code":"var _jsxFileName = \"/Users/seanfiscus/Desktop/streak-tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ActivityList from './components/ActivityList';\nimport ActivityDetails from './components/ActivityDetails';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [activities, setActivities] = useState([]);\n  const [selectedActivity, setSelectedActivity] = useState(null);\n\n  // Load activities from localStorage when the app initializes\n  useEffect(() => {\n    const storedActivities = JSON.parse(localStorage.getItem('activities')) || [];\n    setActivities(storedActivities);\n  }, []);\n\n  // Save activities to localStorage whenever they are updated\n  useEffect(() => {\n    localStorage.setItem('activities', JSON.stringify(activities));\n  }, [activities]);\n  const handleUpdateStreak = index => {\n    const today = new Date().toDateString();\n    const needsContribution = !(activities[index].name === \"Morning/Evening Journal\" || activities[index].name === \"Fitness/Exercise\" || activities[index].name === \"StreakTracker\" || activities[index].name === \"Personal Website\");\n    const newActivities = [...activities];\n    if (needsContribution) {\n      if (newActivities[index].lastUpdated !== today) {\n        const contribution = prompt(\"Enter streak contribution for today:\");\n        if (contribution) {\n          newActivities[index].streak++;\n          newActivities[index].lastUpdated = today;\n          newActivities[index].contributions.push({\n            date: today,\n            contribution\n          });\n          setActivities(newActivities);\n        }\n      } else {\n        alert(\"Streak already updated today.\");\n      }\n    } else {\n      newActivities[index].streak++;\n      newActivities[index].lastUpdated = today;\n      setActivities(newActivities);\n    }\n  };\n  const handleUnfreezeActivity = index => {\n    console.log(`Unfreeze activity at index ${index}`);\n    // Functionality will be added later\n  };\n  const handleFreezeActivity = index => {\n    console.log(`Freeze activity at index ${index}`);\n    // Functionality will be added later\n  };\n  const handleDeleteStreak = index => {\n    console.log(`Delete activity at index ${index}`);\n    setActivities(activities.filter((_, i) => i !== index));\n  };\n  const handleViewActivity = index => {\n    setSelectedActivity(activities[index]);\n  };\n  const handleCompleteAllActivities = () => {\n    console.log('Complete all activities');\n    // Functionality will be added later\n  };\n  const handleAddActivity = e => {\n    e.preventDefault();\n    const activityName = e.target.elements['activity-name'].value;\n    const activityStreak = parseInt(e.target.elements['activity-streak'].value) || 0;\n    if (activityName) {\n      setActivities([...activities, {\n        name: activityName,\n        streak: activityStreak,\n        lastUpdated: new Date().toDateString(),\n        startDate: new Date().toDateString(),\n        contributions: []\n      }]);\n      e.target.reset(); // Clear form inputs after adding\n    }\n  };\n  const goBack = () => {\n    setSelectedActivity(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: selectedActivity ? /*#__PURE__*/_jsxDEV(ActivityDetails, {\n      activity: selectedActivity,\n      goBack: goBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"add-activity-form\",\n        onSubmit: handleAddActivity,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"activity-name\",\n          name: \"activity-name\",\n          placeholder: \"Enter activity name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"activity-streak\",\n          name: \"activity-streak\",\n          placeholder: \"Enter starting streak\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Activity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCompleteAllActivities,\n        children: \"Complete All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ActivityList, {\n        activities: activities,\n        onUpdateStreak: handleUpdateStreak,\n        onUnfreezeActivity: handleUnfreezeActivity,\n        onFreezeActivity: handleFreezeActivity,\n        onDeleteStreak: handleDeleteStreak,\n        onViewActivity: handleViewActivity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"s29INn8c1iGXB4VHiuZzT5h4Sak=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ActivityList","ActivityDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","activities","setActivities","selectedActivity","setSelectedActivity","storedActivities","JSON","parse","localStorage","getItem","setItem","stringify","handleUpdateStreak","index","today","Date","toDateString","needsContribution","name","newActivities","lastUpdated","contribution","prompt","streak","contributions","push","date","alert","handleUnfreezeActivity","console","log","handleFreezeActivity","handleDeleteStreak","filter","_","i","handleViewActivity","handleCompleteAllActivities","handleAddActivity","e","preventDefault","activityName","target","elements","value","activityStreak","parseInt","startDate","reset","goBack","className","children","activity","fileName","_jsxFileName","lineNumber","columnNumber","id","onSubmit","type","placeholder","onClick","onUpdateStreak","onUnfreezeActivity","onFreezeActivity","onDeleteStreak","onViewActivity","_c","$RefreshReg$"],"sources":["/Users/seanfiscus/Desktop/streak-tracker/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ActivityList from './components/ActivityList';\nimport ActivityDetails from './components/ActivityDetails';\nimport './App.css';\n\nfunction App() {\n    const [activities, setActivities] = useState([]);\n    const [selectedActivity, setSelectedActivity] = useState(null);\n\n    // Load activities from localStorage when the app initializes\n    useEffect(() => {\n        const storedActivities = JSON.parse(localStorage.getItem('activities')) || [];\n        setActivities(storedActivities);\n    }, []);\n\n    // Save activities to localStorage whenever they are updated\n    useEffect(() => {\n        localStorage.setItem('activities', JSON.stringify(activities));\n    }, [activities]);\n\n    const handleUpdateStreak = (index) => {\n        const today = new Date().toDateString();\n        const needsContribution = !(activities[index].name === \"Morning/Evening Journal\" || \n                                    activities[index].name === \"Fitness/Exercise\" || \n                                    activities[index].name === \"StreakTracker\" || \n                                    activities[index].name === \"Personal Website\");\n\n        const newActivities = [...activities];\n\n        if (needsContribution) {\n            if (newActivities[index].lastUpdated !== today) {\n                const contribution = prompt(\"Enter streak contribution for today:\");\n                if (contribution) {\n                    newActivities[index].streak++;\n                    newActivities[index].lastUpdated = today;\n                    newActivities[index].contributions.push({ date: today, contribution });\n                    setActivities(newActivities);\n                }\n            } else {\n                alert(\"Streak already updated today.\");\n            }\n        } else {\n            newActivities[index].streak++;\n            newActivities[index].lastUpdated = today;\n            setActivities(newActivities);\n        }\n    };\n\n    const handleUnfreezeActivity = (index) => {\n        console.log(`Unfreeze activity at index ${index}`);\n        // Functionality will be added later\n    };\n\n    const handleFreezeActivity = (index) => {\n        console.log(`Freeze activity at index ${index}`);\n        // Functionality will be added later\n    };\n\n    const handleDeleteStreak = (index) => {\n        console.log(`Delete activity at index ${index}`);\n        setActivities(activities.filter((_, i) => i !== index));\n    };\n\n    const handleViewActivity = (index) => {\n        setSelectedActivity(activities[index]);\n    };\n\n    const handleCompleteAllActivities = () => {\n        console.log('Complete all activities');\n        // Functionality will be added later\n    };\n\n    const handleAddActivity = (e) => {\n        e.preventDefault();\n        const activityName = e.target.elements['activity-name'].value;\n        const activityStreak = parseInt(e.target.elements['activity-streak'].value) || 0;\n        if (activityName) {\n            setActivities([\n                ...activities,\n                {\n                    name: activityName,\n                    streak: activityStreak,\n                    lastUpdated: new Date().toDateString(),\n                    startDate: new Date().toDateString(),\n                    contributions: [],\n                },\n            ]);\n            e.target.reset(); // Clear form inputs after adding\n        }\n    };\n\n    const goBack = () => {\n        setSelectedActivity(null);\n    };\n\n    return (\n        <div className=\"container\">\n            {selectedActivity ? (\n                <ActivityDetails activity={selectedActivity} goBack={goBack} />\n            ) : (\n                <>\n                    <form id=\"add-activity-form\" onSubmit={handleAddActivity}>\n                        <input type=\"text\" id=\"activity-name\" name=\"activity-name\" placeholder=\"Enter activity name\" />\n                        <input type=\"number\" id=\"activity-streak\" name=\"activity-streak\" placeholder=\"Enter starting streak\" />\n                        <button type=\"submit\">Add Activity</button>\n                    </form>\n                    <button onClick={handleCompleteAllActivities}>Complete All</button>\n                    <ActivityList\n                        activities={activities}\n                        onUpdateStreak={handleUpdateStreak}\n                        onUnfreezeActivity={handleUnfreezeActivity}\n                        onFreezeActivity={handleFreezeActivity}\n                        onDeleteStreak={handleDeleteStreak}\n                        onViewActivity={handleViewActivity}\n                    />\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAE9D;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMa,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE;IAC7EP,aAAa,CAACG,gBAAgB,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAb,SAAS,CAAC,MAAM;IACZgB,YAAY,CAACE,OAAO,CAAC,YAAY,EAAEJ,IAAI,CAACK,SAAS,CAACV,UAAU,CAAC,CAAC;EAClE,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAMW,kBAAkB,GAAIC,KAAK,IAAK;IAClC,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,YAAY,CAAC,CAAC;IACvC,MAAMC,iBAAiB,GAAG,EAAEhB,UAAU,CAACY,KAAK,CAAC,CAACK,IAAI,KAAK,yBAAyB,IACpDjB,UAAU,CAACY,KAAK,CAAC,CAACK,IAAI,KAAK,kBAAkB,IAC7CjB,UAAU,CAACY,KAAK,CAAC,CAACK,IAAI,KAAK,eAAe,IAC1CjB,UAAU,CAACY,KAAK,CAAC,CAACK,IAAI,KAAK,kBAAkB,CAAC;IAE1E,MAAMC,aAAa,GAAG,CAAC,GAAGlB,UAAU,CAAC;IAErC,IAAIgB,iBAAiB,EAAE;MACnB,IAAIE,aAAa,CAACN,KAAK,CAAC,CAACO,WAAW,KAAKN,KAAK,EAAE;QAC5C,MAAMO,YAAY,GAAGC,MAAM,CAAC,sCAAsC,CAAC;QACnE,IAAID,YAAY,EAAE;UACdF,aAAa,CAACN,KAAK,CAAC,CAACU,MAAM,EAAE;UAC7BJ,aAAa,CAACN,KAAK,CAAC,CAACO,WAAW,GAAGN,KAAK;UACxCK,aAAa,CAACN,KAAK,CAAC,CAACW,aAAa,CAACC,IAAI,CAAC;YAAEC,IAAI,EAAEZ,KAAK;YAAEO;UAAa,CAAC,CAAC;UACtEnB,aAAa,CAACiB,aAAa,CAAC;QAChC;MACJ,CAAC,MAAM;QACHQ,KAAK,CAAC,+BAA+B,CAAC;MAC1C;IACJ,CAAC,MAAM;MACHR,aAAa,CAACN,KAAK,CAAC,CAACU,MAAM,EAAE;MAC7BJ,aAAa,CAACN,KAAK,CAAC,CAACO,WAAW,GAAGN,KAAK;MACxCZ,aAAa,CAACiB,aAAa,CAAC;IAChC;EACJ,CAAC;EAED,MAAMS,sBAAsB,GAAIf,KAAK,IAAK;IACtCgB,OAAO,CAACC,GAAG,CAAC,8BAA8BjB,KAAK,EAAE,CAAC;IAClD;EACJ,CAAC;EAED,MAAMkB,oBAAoB,GAAIlB,KAAK,IAAK;IACpCgB,OAAO,CAACC,GAAG,CAAC,4BAA4BjB,KAAK,EAAE,CAAC;IAChD;EACJ,CAAC;EAED,MAAMmB,kBAAkB,GAAInB,KAAK,IAAK;IAClCgB,OAAO,CAACC,GAAG,CAAC,4BAA4BjB,KAAK,EAAE,CAAC;IAChDX,aAAa,CAACD,UAAU,CAACgC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKtB,KAAK,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMuB,kBAAkB,GAAIvB,KAAK,IAAK;IAClCT,mBAAmB,CAACH,UAAU,CAACY,KAAK,CAAC,CAAC;EAC1C,CAAC;EAED,MAAMwB,2BAA2B,GAAGA,CAAA,KAAM;IACtCR,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC;EACJ,CAAC;EAED,MAAMQ,iBAAiB,GAAIC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,YAAY,GAAGF,CAAC,CAACG,MAAM,CAACC,QAAQ,CAAC,eAAe,CAAC,CAACC,KAAK;IAC7D,MAAMC,cAAc,GAAGC,QAAQ,CAACP,CAAC,CAACG,MAAM,CAACC,QAAQ,CAAC,iBAAiB,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC;IAChF,IAAIH,YAAY,EAAE;MACdvC,aAAa,CAAC,CACV,GAAGD,UAAU,EACb;QACIiB,IAAI,EAAEuB,YAAY;QAClBlB,MAAM,EAAEsB,cAAc;QACtBzB,WAAW,EAAE,IAAIL,IAAI,CAAC,CAAC,CAACC,YAAY,CAAC,CAAC;QACtC+B,SAAS,EAAE,IAAIhC,IAAI,CAAC,CAAC,CAACC,YAAY,CAAC,CAAC;QACpCQ,aAAa,EAAE;MACnB,CAAC,CACJ,CAAC;MACFe,CAAC,CAACG,MAAM,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC;IACtB;EACJ,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACjB7C,mBAAmB,CAAC,IAAI,CAAC;EAC7B,CAAC;EAED,oBACIR,OAAA;IAAKsD,SAAS,EAAC,WAAW;IAAAC,QAAA,EACrBhD,gBAAgB,gBACbP,OAAA,CAACF,eAAe;MAAC0D,QAAQ,EAAEjD,gBAAiB;MAAC8C,MAAM,EAAEA;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE/D5D,OAAA,CAAAE,SAAA;MAAAqD,QAAA,gBACIvD,OAAA;QAAM6D,EAAE,EAAC,mBAAmB;QAACC,QAAQ,EAAEpB,iBAAkB;QAAAa,QAAA,gBACrDvD,OAAA;UAAO+D,IAAI,EAAC,MAAM;UAACF,EAAE,EAAC,eAAe;UAACvC,IAAI,EAAC,eAAe;UAAC0C,WAAW,EAAC;QAAqB;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/F5D,OAAA;UAAO+D,IAAI,EAAC,QAAQ;UAACF,EAAE,EAAC,iBAAiB;UAACvC,IAAI,EAAC,iBAAiB;UAAC0C,WAAW,EAAC;QAAuB;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvG5D,OAAA;UAAQ+D,IAAI,EAAC,QAAQ;UAAAR,QAAA,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACP5D,OAAA;QAAQiE,OAAO,EAAExB,2BAA4B;QAAAc,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnE5D,OAAA,CAACH,YAAY;QACTQ,UAAU,EAAEA,UAAW;QACvB6D,cAAc,EAAElD,kBAAmB;QACnCmD,kBAAkB,EAAEnC,sBAAuB;QAC3CoC,gBAAgB,EAAEjC,oBAAqB;QACvCkC,cAAc,EAAEjC,kBAAmB;QACnCkC,cAAc,EAAE9B;MAAmB;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA,eACJ;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACxD,EAAA,CAlHQD,GAAG;AAAAoE,EAAA,GAAHpE,GAAG;AAoHZ,eAAeA,GAAG;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}